TARGETS= \
	AAClust.exe \
	AAClusterFirst.exe \
	AAClustSig.exe \
	AAClustSigEncode.exe \
	DomainKMedoids.exe \
	GetCdfInverse.exe \
	GetKmerTheoreticalDistanceDistributions.exe \
	GetLargestProtosByClass.exe \
	SplitFastaHomologs.exe \
	trec_eval_tc_compact.exe

all: $(TARGETS)

clean:
	for f in $(TARGETS); do \
		if [ -f $${f} ]; then rm $${f}; fi; \
	done

rebuild: clean all

FLAGS=	-std=c++14 \
		-g \
		-O3 \
		-I include \
		-D 'alloca=__builtin_alloca' \
		-D 'POPCOUNT=__builtin_popcountll' \
		-D 'USE_OMP=1' \
		-D 'DO_OMP_TIMER=1' \
		-D 'DEFAULT_THREADS=8' \
		-fopenmp \
		-lgomp \
		-lpthread \
		-lrt \
		-mpopcnt \
		-o $@

SIG=include

AAClust.exe: AAClust.cpp \
	$(SIG)/Args.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/SimilarityMatrix.hpp \
	$(SIG)/KmerCluster.hpp \
	$(SIG)/KmerClusterPrototype.hpp \
	$(SIG)/KmerDistanceCache.hpp \
	$(SIG)/Alphabet.hpp \
	$(SIG)/Console.hpp \
	$(SIG)/Delegates.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/PointerList.hpp \
	$(SIG)/Util.hpp \
	$(SIG)/OmpTimer.h
	g++ AAClust.cpp \
		$(FLAGS)
	cp $@ ../bin-cygwin

AAClusterFirst.exe: AAClusterFirst.cpp  \
	$(SIG)/Args.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/SimilarityMatrix.hpp \
	$(SIG)/KmerCluster.hpp \
	$(SIG)/KmerClusterPrototype.hpp \
	$(SIG)/KmerCodebook.hpp \
	$(SIG)/KmerDistanceCache.hpp \
	$(SIG)/Alphabet.hpp \
	$(SIG)/Console.hpp \
	$(SIG)/Delegates.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/PointerList.hpp \
	$(SIG)/Util.hpp \
	$(SIG)/OmpTimer.h
	g++ AAClusterFirst.cpp \
		$(FLAGS)
	cp $@ ../bin-cygwin

AAClustSig.exe: AAClustSig.cpp  \
	$(SIG)/Args.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/SimilarityMatrix.hpp \
	$(SIG)/KmerCluster.hpp \
	$(SIG)/KmerClusterPrototype.hpp \
	$(SIG)/KmerDistanceCache.hpp \
	$(SIG)/Alphabet.hpp \
	$(SIG)/Console.hpp \
	$(SIG)/Delegates.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/PointerList.hpp \
	$(SIG)/Util.hpp \
	$(SIG)/OmpTimer.h
	g++ AAClustSig.cpp \
		$(FLAGS)
	cp $@ ../bin-cygwin

AAClustSigEncode.exe: AAClustSigEncode.cpp  \
	$(SIG)/Args.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/SimilarityMatrix.hpp \
	$(SIG)/KmerCluster.hpp \
	$(SIG)/KmerClusterPrototype.hpp \
	$(SIG)/KmerDistanceCache.hpp \
	$(SIG)/Alphabet.hpp \
	$(SIG)/Console.hpp \
	$(SIG)/Delegates.hpp \
	$(SIG)/FastaSequence.hpp \
	$(SIG)/PointerList.hpp \
	$(SIG)/Util.hpp \
	$(SIG)/OmpTimer.h
	g++ AAClustSigEncode.cpp \
		$(FLAGS)
	cp $@ ../bin-cygwin

DomainKMedoids.exe: DomainKMedoids.cpp \
		$(SIG)/Args.hpp \
		$(SIG)/Domain.hpp \
		$(SIG)/String.hpp \
		$(SIG)/FastaSequence.hpp \
		$(SIG)/KmerDistanceCache.hpp \
		$(SIG)/SimilarityMatrix.hpp \
		$(SIG)/Alphabet.hpp \
		$(SIG)/HBRandom.hpp
	g++ DomainKMedoids.cpp $(FLAGS) -O3 -o $@
	cp $@ ../bin-cygwin

GetCdfInverse.exe: GetCdfInverse.cpp
	g++ GetCdfInverse.cpp \
		-o $@ \
		-std=c++14 \
		-I$(SIG) \
		-I$(SIG)/Lmvq \
		-Dalloca=__builtin_alloca \
		-DPOPCOUNT=__builtin_popcountll \
		-O3 \
		-fopenmp \
		-lgomp \
		-lpthread \
		-lrt \
		-mpopcnt
	cp $@ ../bin-cygwin

GetKmerTheoreticalDistanceDistributions.exe: GetKmerTheoreticalDistanceDistributions.cpp
	g++ GetKmerTheoreticalDistanceDistributions.cpp \
		-std=c++14 \
		-I$(SIG) \
		-I$(SIG)/Lmvq \
		-Dalloca=__builtin_alloca \
		-DPOPCOUNT=__builtin_popcountll \
		-O3 \
		-fopenmp \
		-lgomp \
		-lpthread \
		-lrt \
		-o $@ \
		-mpopcnt
	cp $@ ../bin-cygwin

GetLargestProtosByClass.exe: GetLargestProtosByClass.cpp \
		$(SIG)/Args.hpp \
		$(SIG)/Domain.hpp \
		$(SIG)/String.hpp \
		$(SIG)/FastaSequence.hpp \
		$(SIG)/KmerDistanceCache.hpp \
		$(SIG)/SimilarityMatrix.hpp \
		$(SIG)/Alphabet.hpp \
		$(SIG)/HBRandom.hpp
	g++ GetLargestProtosByClass.cpp $(FLAGS) -O3 -o $@
	cp $@ ../bin-cygwin

SplitFastaHomologs.exe: SplitFastaHomologs.cpp \
		$(SIG)/Args.hpp \
		$(SIG)/Domain.hpp \
		$(SIG)/String.hpp \
		$(SIG)/FastaSequence.hpp \
		$(SIG)/KmerDistanceCache.hpp \
		$(SIG)/SimilarityMatrix.hpp \
		$(SIG)/Alphabet.hpp \
		$(SIG)/HBRandom.hpp
	g++ SplitFastaHomologs.cpp $(FLAGS) -O3 -o $@
	cp $@ ../bin-cygwin

trec_eval_tc_compact.exe: trec_eval_tc_compact.cpp
	g++ trec_eval_tc_compact.cpp \
		-I include \
		-o $@ \
		-std=c++11 \
		-O3 \
		-fopenmp \
		-l gomp \
		-l pthread \
		-l rt \
		-D alloca=__builtin_alloca \
		-D POPCOUNT=__builtin_popcountll \
		-mpopcnt 
	cp $@ ../bin-cygwin

